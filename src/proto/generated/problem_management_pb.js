// source: problem_management.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.ChangeStateRequest', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.ChangeStateResponse', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.CreateProblemRequest', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.CreateProblemResponse', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.GetProblemRequest', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.GetProblemResponse', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.GrpcProblem', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.GrpcProblemState', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.GrpcStateOperation', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.ListProblemsRequest', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.ListProblemsResponse', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.RemoveProblemRequest', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.RemoveProblemResponse', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.UpdateProblemRequest', null, global);
goog.exportSymbol('proto.edu.kit.tm.cm.proto.UpdateProblemResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.ListProblemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.ListProblemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.ListProblemsRequest.displayName = 'proto.edu.kit.tm.cm.proto.ListProblemsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.edu.kit.tm.cm.proto.ListProblemsResponse.repeatedFields_, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.ListProblemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.ListProblemsResponse.displayName = 'proto.edu.kit.tm.cm.proto.ListProblemsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.GetProblemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.GetProblemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.GetProblemRequest.displayName = 'proto.edu.kit.tm.cm.proto.GetProblemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.edu.kit.tm.cm.proto.GetProblemResponse.repeatedFields_, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.GetProblemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.GetProblemResponse.displayName = 'proto.edu.kit.tm.cm.proto.GetProblemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.CreateProblemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.CreateProblemRequest.displayName = 'proto.edu.kit.tm.cm.proto.CreateProblemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.CreateProblemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.CreateProblemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.CreateProblemResponse.displayName = 'proto.edu.kit.tm.cm.proto.CreateProblemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.UpdateProblemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.UpdateProblemRequest.displayName = 'proto.edu.kit.tm.cm.proto.UpdateProblemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.UpdateProblemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.UpdateProblemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.UpdateProblemResponse.displayName = 'proto.edu.kit.tm.cm.proto.UpdateProblemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.RemoveProblemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.RemoveProblemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.RemoveProblemRequest.displayName = 'proto.edu.kit.tm.cm.proto.RemoveProblemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.RemoveProblemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.RemoveProblemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.RemoveProblemResponse.displayName = 'proto.edu.kit.tm.cm.proto.RemoveProblemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.ChangeStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.ChangeStateRequest.displayName = 'proto.edu.kit.tm.cm.proto.ChangeStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.ChangeStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.ChangeStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.ChangeStateResponse.displayName = 'proto.edu.kit.tm.cm.proto.ChangeStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.GrpcProblem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.GrpcProblem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.GrpcProblem.displayName = 'proto.edu.kit.tm.cm.proto.GrpcProblem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.repeatedFields_, null);
};
goog.inherits(proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.displayName = 'proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.ListProblemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.ListProblemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.ListProblemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.ListProblemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    grpcFilterValueSelection: (f = msg.getGrpcFilterValueSelection()) && proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.ListProblemsRequest}
 */
proto.edu.kit.tm.cm.proto.ListProblemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.ListProblemsRequest;
  return proto.edu.kit.tm.cm.proto.ListProblemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.ListProblemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.ListProblemsRequest}
 */
proto.edu.kit.tm.cm.proto.ListProblemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection;
      reader.readMessage(value,proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.deserializeBinaryFromReader);
      msg.setGrpcFilterValueSelection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.ListProblemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.ListProblemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.ListProblemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.ListProblemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrpcFilterValueSelection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.serializeBinaryToWriter
    );
  }
};


/**
 * optional GrpcProblemFilterValueSelection grpc_filter_value_selection = 1;
 * @return {?proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection}
 */
proto.edu.kit.tm.cm.proto.ListProblemsRequest.prototype.getGrpcFilterValueSelection = function() {
  return /** @type{?proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection} */ (
    jspb.Message.getWrapperField(this, proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection, 1));
};


/**
 * @param {?proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection|undefined} value
 * @return {!proto.edu.kit.tm.cm.proto.ListProblemsRequest} returns this
*/
proto.edu.kit.tm.cm.proto.ListProblemsRequest.prototype.setGrpcFilterValueSelection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.edu.kit.tm.cm.proto.ListProblemsRequest} returns this
 */
proto.edu.kit.tm.cm.proto.ListProblemsRequest.prototype.clearGrpcFilterValueSelection = function() {
  return this.setGrpcFilterValueSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.edu.kit.tm.cm.proto.ListProblemsRequest.prototype.hasGrpcFilterValueSelection = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.ListProblemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.ListProblemsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    problemsList: jspb.Message.toObjectList(msg.getProblemsList(),
    proto.edu.kit.tm.cm.proto.GrpcProblem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.ListProblemsResponse}
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.ListProblemsResponse;
  return proto.edu.kit.tm.cm.proto.ListProblemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.ListProblemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.ListProblemsResponse}
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.edu.kit.tm.cm.proto.GrpcProblem;
      reader.readMessage(value,proto.edu.kit.tm.cm.proto.GrpcProblem.deserializeBinaryFromReader);
      msg.addProblems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.ListProblemsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.ListProblemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProblemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.edu.kit.tm.cm.proto.GrpcProblem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GrpcProblem problems = 1;
 * @return {!Array<!proto.edu.kit.tm.cm.proto.GrpcProblem>}
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse.prototype.getProblemsList = function() {
  return /** @type{!Array<!proto.edu.kit.tm.cm.proto.GrpcProblem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.edu.kit.tm.cm.proto.GrpcProblem, 1));
};


/**
 * @param {!Array<!proto.edu.kit.tm.cm.proto.GrpcProblem>} value
 * @return {!proto.edu.kit.tm.cm.proto.ListProblemsResponse} returns this
*/
proto.edu.kit.tm.cm.proto.ListProblemsResponse.prototype.setProblemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.edu.kit.tm.cm.proto.GrpcProblem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem}
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse.prototype.addProblems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.edu.kit.tm.cm.proto.GrpcProblem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.edu.kit.tm.cm.proto.ListProblemsResponse} returns this
 */
proto.edu.kit.tm.cm.proto.ListProblemsResponse.prototype.clearProblemsList = function() {
  return this.setProblemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.GetProblemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.GetProblemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.GetProblemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.GetProblemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identificationNumber: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.GetProblemRequest}
 */
proto.edu.kit.tm.cm.proto.GetProblemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.GetProblemRequest;
  return proto.edu.kit.tm.cm.proto.GetProblemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.GetProblemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.GetProblemRequest}
 */
proto.edu.kit.tm.cm.proto.GetProblemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentificationNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.GetProblemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.GetProblemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.GetProblemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.GetProblemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentificationNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string identification_number = 1;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.GetProblemRequest.prototype.getIdentificationNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.GetProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.GetProblemRequest.prototype.setIdentificationNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.GetProblemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.GetProblemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    problem: (f = msg.getProblem()) && proto.edu.kit.tm.cm.proto.GrpcProblem.toObject(includeInstance, f),
    possibleStateOperationsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.GetProblemResponse}
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.GetProblemResponse;
  return proto.edu.kit.tm.cm.proto.GetProblemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.GetProblemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.GetProblemResponse}
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.edu.kit.tm.cm.proto.GrpcProblem;
      reader.readMessage(value,proto.edu.kit.tm.cm.proto.GrpcProblem.deserializeBinaryFromReader);
      msg.setProblem(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.edu.kit.tm.cm.proto.GrpcStateOperation>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPossibleStateOperations(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.GetProblemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.GetProblemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProblem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.edu.kit.tm.cm.proto.GrpcProblem.serializeBinaryToWriter
    );
  }
  f = message.getPossibleStateOperationsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * optional GrpcProblem problem = 1;
 * @return {?proto.edu.kit.tm.cm.proto.GrpcProblem}
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.prototype.getProblem = function() {
  return /** @type{?proto.edu.kit.tm.cm.proto.GrpcProblem} */ (
    jspb.Message.getWrapperField(this, proto.edu.kit.tm.cm.proto.GrpcProblem, 1));
};


/**
 * @param {?proto.edu.kit.tm.cm.proto.GrpcProblem|undefined} value
 * @return {!proto.edu.kit.tm.cm.proto.GetProblemResponse} returns this
*/
proto.edu.kit.tm.cm.proto.GetProblemResponse.prototype.setProblem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.edu.kit.tm.cm.proto.GetProblemResponse} returns this
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.prototype.clearProblem = function() {
  return this.setProblem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.prototype.hasProblem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GrpcStateOperation possible_state_operations = 2;
 * @return {!Array<!proto.edu.kit.tm.cm.proto.GrpcStateOperation>}
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.prototype.getPossibleStateOperationsList = function() {
  return /** @type {!Array<!proto.edu.kit.tm.cm.proto.GrpcStateOperation>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.edu.kit.tm.cm.proto.GrpcStateOperation>} value
 * @return {!proto.edu.kit.tm.cm.proto.GetProblemResponse} returns this
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.prototype.setPossibleStateOperationsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.edu.kit.tm.cm.proto.GrpcStateOperation} value
 * @param {number=} opt_index
 * @return {!proto.edu.kit.tm.cm.proto.GetProblemResponse} returns this
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.prototype.addPossibleStateOperations = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.edu.kit.tm.cm.proto.GetProblemResponse} returns this
 */
proto.edu.kit.tm.cm.proto.GetProblemResponse.prototype.clearPossibleStateOperationsList = function() {
  return this.setPossibleStateOperationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.CreateProblemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.CreateProblemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    problemTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    problemDescription: jspb.Message.getFieldWithDefault(msg, 4, ""),
    problemReporter: jspb.Message.getFieldWithDefault(msg, 5, ""),
    referenceIdentificationNumber: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.CreateProblemRequest}
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.CreateProblemRequest;
  return proto.edu.kit.tm.cm.proto.CreateProblemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.CreateProblemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.CreateProblemRequest}
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemReporter(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceIdentificationNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.CreateProblemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.CreateProblemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProblemTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProblemDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProblemReporter();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReferenceIdentificationNumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string problem_title = 3;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.prototype.getProblemTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.CreateProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.prototype.setProblemTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string problem_description = 4;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.prototype.getProblemDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.CreateProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.prototype.setProblemDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string problem_reporter = 5;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.prototype.getProblemReporter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.CreateProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.prototype.setProblemReporter = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string reference_identification_number = 7;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.prototype.getReferenceIdentificationNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.CreateProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.CreateProblemRequest.prototype.setReferenceIdentificationNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.CreateProblemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.CreateProblemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.CreateProblemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.CreateProblemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    problem: (f = msg.getProblem()) && proto.edu.kit.tm.cm.proto.GrpcProblem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.CreateProblemResponse}
 */
proto.edu.kit.tm.cm.proto.CreateProblemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.CreateProblemResponse;
  return proto.edu.kit.tm.cm.proto.CreateProblemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.CreateProblemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.CreateProblemResponse}
 */
proto.edu.kit.tm.cm.proto.CreateProblemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.edu.kit.tm.cm.proto.GrpcProblem;
      reader.readMessage(value,proto.edu.kit.tm.cm.proto.GrpcProblem.deserializeBinaryFromReader);
      msg.setProblem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.CreateProblemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.CreateProblemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.CreateProblemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.CreateProblemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProblem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.edu.kit.tm.cm.proto.GrpcProblem.serializeBinaryToWriter
    );
  }
};


/**
 * optional GrpcProblem problem = 1;
 * @return {?proto.edu.kit.tm.cm.proto.GrpcProblem}
 */
proto.edu.kit.tm.cm.proto.CreateProblemResponse.prototype.getProblem = function() {
  return /** @type{?proto.edu.kit.tm.cm.proto.GrpcProblem} */ (
    jspb.Message.getWrapperField(this, proto.edu.kit.tm.cm.proto.GrpcProblem, 1));
};


/**
 * @param {?proto.edu.kit.tm.cm.proto.GrpcProblem|undefined} value
 * @return {!proto.edu.kit.tm.cm.proto.CreateProblemResponse} returns this
*/
proto.edu.kit.tm.cm.proto.CreateProblemResponse.prototype.setProblem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.edu.kit.tm.cm.proto.CreateProblemResponse} returns this
 */
proto.edu.kit.tm.cm.proto.CreateProblemResponse.prototype.clearProblem = function() {
  return this.setProblem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.edu.kit.tm.cm.proto.CreateProblemResponse.prototype.hasProblem = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.UpdateProblemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.UpdateProblemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identificationNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    problemTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    problemDescription: jspb.Message.getFieldWithDefault(msg, 4, ""),
    problemReporter: jspb.Message.getFieldWithDefault(msg, 5, ""),
    referenceIdentificationNumber: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemRequest}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.UpdateProblemRequest;
  return proto.edu.kit.tm.cm.proto.UpdateProblemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.UpdateProblemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemRequest}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentificationNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemReporter(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceIdentificationNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.UpdateProblemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.UpdateProblemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentificationNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProblemTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProblemDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProblemReporter();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReferenceIdentificationNumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string identification_number = 2;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.getIdentificationNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.setIdentificationNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string problem_title = 3;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.getProblemTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.setProblemTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string problem_description = 4;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.getProblemDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.setProblemDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string problem_reporter = 5;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.getProblemReporter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.setProblemReporter = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string reference_identification_number = 7;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.getReferenceIdentificationNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.UpdateProblemRequest.prototype.setReferenceIdentificationNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.UpdateProblemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.UpdateProblemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.UpdateProblemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    problem: (f = msg.getProblem()) && proto.edu.kit.tm.cm.proto.GrpcProblem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemResponse}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.UpdateProblemResponse;
  return proto.edu.kit.tm.cm.proto.UpdateProblemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.UpdateProblemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemResponse}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.edu.kit.tm.cm.proto.GrpcProblem;
      reader.readMessage(value,proto.edu.kit.tm.cm.proto.GrpcProblem.deserializeBinaryFromReader);
      msg.setProblem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.UpdateProblemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.UpdateProblemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.UpdateProblemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProblem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.edu.kit.tm.cm.proto.GrpcProblem.serializeBinaryToWriter
    );
  }
};


/**
 * optional GrpcProblem problem = 1;
 * @return {?proto.edu.kit.tm.cm.proto.GrpcProblem}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemResponse.prototype.getProblem = function() {
  return /** @type{?proto.edu.kit.tm.cm.proto.GrpcProblem} */ (
    jspb.Message.getWrapperField(this, proto.edu.kit.tm.cm.proto.GrpcProblem, 1));
};


/**
 * @param {?proto.edu.kit.tm.cm.proto.GrpcProblem|undefined} value
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemResponse} returns this
*/
proto.edu.kit.tm.cm.proto.UpdateProblemResponse.prototype.setProblem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.edu.kit.tm.cm.proto.UpdateProblemResponse} returns this
 */
proto.edu.kit.tm.cm.proto.UpdateProblemResponse.prototype.clearProblem = function() {
  return this.setProblem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.edu.kit.tm.cm.proto.UpdateProblemResponse.prototype.hasProblem = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.RemoveProblemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.RemoveProblemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.RemoveProblemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.RemoveProblemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identificationNumber: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.RemoveProblemRequest}
 */
proto.edu.kit.tm.cm.proto.RemoveProblemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.RemoveProblemRequest;
  return proto.edu.kit.tm.cm.proto.RemoveProblemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.RemoveProblemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.RemoveProblemRequest}
 */
proto.edu.kit.tm.cm.proto.RemoveProblemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentificationNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.RemoveProblemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.RemoveProblemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.RemoveProblemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.RemoveProblemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentificationNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string identification_number = 1;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.RemoveProblemRequest.prototype.getIdentificationNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.RemoveProblemRequest} returns this
 */
proto.edu.kit.tm.cm.proto.RemoveProblemRequest.prototype.setIdentificationNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.RemoveProblemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.RemoveProblemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.RemoveProblemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.RemoveProblemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.RemoveProblemResponse}
 */
proto.edu.kit.tm.cm.proto.RemoveProblemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.RemoveProblemResponse;
  return proto.edu.kit.tm.cm.proto.RemoveProblemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.RemoveProblemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.RemoveProblemResponse}
 */
proto.edu.kit.tm.cm.proto.RemoveProblemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.RemoveProblemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.RemoveProblemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.RemoveProblemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.RemoveProblemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.ChangeStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.ChangeStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    grpcStateOperation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    identificationNumber: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.ChangeStateRequest}
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.ChangeStateRequest;
  return proto.edu.kit.tm.cm.proto.ChangeStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.ChangeStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.ChangeStateRequest}
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.edu.kit.tm.cm.proto.GrpcStateOperation} */ (reader.readEnum());
      msg.setGrpcStateOperation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentificationNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.ChangeStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.ChangeStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrpcStateOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIdentificationNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional GrpcStateOperation grpc_state_operation = 1;
 * @return {!proto.edu.kit.tm.cm.proto.GrpcStateOperation}
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest.prototype.getGrpcStateOperation = function() {
  return /** @type {!proto.edu.kit.tm.cm.proto.GrpcStateOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.edu.kit.tm.cm.proto.GrpcStateOperation} value
 * @return {!proto.edu.kit.tm.cm.proto.ChangeStateRequest} returns this
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest.prototype.setGrpcStateOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string identification_number = 2;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest.prototype.getIdentificationNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.ChangeStateRequest} returns this
 */
proto.edu.kit.tm.cm.proto.ChangeStateRequest.prototype.setIdentificationNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.ChangeStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.ChangeStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.ChangeStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.ChangeStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.ChangeStateResponse}
 */
proto.edu.kit.tm.cm.proto.ChangeStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.ChangeStateResponse;
  return proto.edu.kit.tm.cm.proto.ChangeStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.ChangeStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.ChangeStateResponse}
 */
proto.edu.kit.tm.cm.proto.ChangeStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.ChangeStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.ChangeStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.ChangeStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.ChangeStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.GrpcProblem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.GrpcProblem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.toObject = function(includeInstance, msg) {
  var f, obj = {
    problemState: jspb.Message.getFieldWithDefault(msg, 1, 0),
    identificationNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    problemTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    problemDescription: jspb.Message.getFieldWithDefault(msg, 4, ""),
    problemReporter: jspb.Message.getFieldWithDefault(msg, 5, ""),
    creationTime: (f = msg.getCreationTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    referenceIdentificationNumber: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.GrpcProblem;
  return proto.edu.kit.tm.cm.proto.GrpcProblem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.GrpcProblem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.edu.kit.tm.cm.proto.GrpcProblemState} */ (reader.readEnum());
      msg.setProblemState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentificationNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemReporter(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationTime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceIdentificationNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.GrpcProblem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.GrpcProblem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProblemState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIdentificationNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProblemTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProblemDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProblemReporter();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreationTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReferenceIdentificationNumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional GrpcProblemState problem_state = 1;
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblemState}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.getProblemState = function() {
  return /** @type {!proto.edu.kit.tm.cm.proto.GrpcProblemState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.edu.kit.tm.cm.proto.GrpcProblemState} value
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.setProblemState = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string identification_number = 2;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.getIdentificationNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.setIdentificationNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string problem_title = 3;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.getProblemTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.setProblemTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string problem_description = 4;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.getProblemDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.setProblemDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string problem_reporter = 5;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.getProblemReporter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.setProblemReporter = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp creation_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.getCreationTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem} returns this
*/
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.setCreationTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.clearCreationTime = function() {
  return this.setCreationTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.hasCreationTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string reference_identification_number = 7;
 * @return {string}
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.getReferenceIdentificationNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblem} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblem.prototype.setReferenceIdentificationNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportersList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    statesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection}
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection;
  return proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection}
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addReporters(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.edu.kit.tm.cm.proto.GrpcProblemState>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStates(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getStatesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * repeated string reporters = 1;
 * @return {!Array<string>}
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.prototype.getReportersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.prototype.setReportersList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.prototype.addReporters = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.prototype.clearReportersList = function() {
  return this.setReportersList([]);
};


/**
 * repeated GrpcProblemState states = 2;
 * @return {!Array<!proto.edu.kit.tm.cm.proto.GrpcProblemState>}
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.prototype.getStatesList = function() {
  return /** @type {!Array<!proto.edu.kit.tm.cm.proto.GrpcProblemState>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.edu.kit.tm.cm.proto.GrpcProblemState>} value
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.prototype.setStatesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.edu.kit.tm.cm.proto.GrpcProblemState} value
 * @param {number=} opt_index
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.prototype.addStates = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection} returns this
 */
proto.edu.kit.tm.cm.proto.GrpcProblemFilterValueSelection.prototype.clearStatesList = function() {
  return this.setStatesList([]);
};


/**
 * @enum {number}
 */
proto.edu.kit.tm.cm.proto.GrpcProblemState = {
  UNKNOWN_PROBLEM_STATE: 0,
  ACCEPTED: 1,
  DECLINED: 2,
  IN_PROGRESS: 3,
  OPEN: 4,
  CLOSED: 5
};

/**
 * @enum {number}
 */
proto.edu.kit.tm.cm.proto.GrpcStateOperation = {
  UNKNOWN_STATE_OPERATION: 0,
  ACCEPT: 1,
  CLOSE: 2,
  DECLINE: 3,
  APPROACH: 4,
  HOLD: 5
};

goog.object.extend(exports, proto.edu.kit.tm.cm.proto);
